/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef VPNSERVICE_TYPES_H
#define VPNSERVICE_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>

/* custom thrift includes */

/* begin types */

enum _af_afi {
  AF_AFI_AFI_IP = 1
};
typedef enum _af_afi af_afi;

/* return the name of the constant */
const char *
toString_af_afi(int value); 

enum _af_safi {
  AF_SAFI_SAFI_IPV4_LABELED_UNICAST = 4,
  AF_SAFI_SAFI_MPLS_VPN = 5
};
typedef enum _af_safi af_safi;

/* return the name of the constant */
const char *
toString_af_safi(int value); 

/* struct Update */
struct _Update
{ 
  ThriftStruct parent; 

  /* public */
  gint32 type;
  gboolean __isset_type;
  gint32 reserved;
  gboolean __isset_reserved;
  gint32 prefixlen;
  gboolean __isset_prefixlen;
  gint32 label;
  gboolean __isset_label;
  gchar * rd;
  gboolean __isset_rd;
  gchar * prefix;
  gboolean __isset_prefix;
  gchar * nexthop;
  gboolean __isset_nexthop;
};
typedef struct _Update Update;

struct _UpdateClass
{
  ThriftStructClass parent;
};
typedef struct _UpdateClass UpdateClass;

GType update_get_type (void);
#define TYPE_UPDATE (update_get_type())
#define UPDATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UPDATE, Update))
#define UPDATE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_UPDATE, UpdateClass))
#define IS_UPDATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UPDATE))
#define IS_UPDATE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_UPDATE))
#define UPDATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UPDATE, UpdateClass))

/* struct Routes */
struct _Routes
{ 
  ThriftStruct parent; 

  /* public */
  gint32 errcode;
  gboolean __isset_errcode;
  GPtrArray * updates;
  gboolean __isset_updates;
  gint32 more;
  gboolean __isset_more;
};
typedef struct _Routes Routes;

struct _RoutesClass
{
  ThriftStructClass parent;
};
typedef struct _RoutesClass RoutesClass;

GType routes_get_type (void);
#define TYPE_ROUTES (routes_get_type())
#define ROUTES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ROUTES, Routes))
#define ROUTES_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_ROUTES, RoutesClass))
#define IS_ROUTES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ROUTES))
#define IS_ROUTES_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_ROUTES))
#define ROUTES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ROUTES, RoutesClass))

/* constants */
#define LBL_NO_LABEL 0
#define LBL_EXPLICIT_NULL 3
#define BGP_RT_ADD 0
#define BGP_RT_DEL 1
#define GET_RTS_INIT 0
#define GET_RTS_NEXT 1
#define BGP_ERR_FAILED 1
#define BGP_ERR_ACTIVE 10
#define BGP_ERR_INACTIVE 11
#define BGP_ERR_NOT_ITER 15
#define BGP_ERR_PARAM 100

/* struct BgpConfiguratorStartBgpArgs */
struct _BgpConfiguratorStartBgpArgs
{ 
  ThriftStruct parent; 

  /* public */
  gint32 asNumber;
  gboolean __isset_asNumber;
  gchar * routerId;
  gboolean __isset_routerId;
  gint32 port;
  gboolean __isset_port;
  gint32 holdTime;
  gboolean __isset_holdTime;
  gint32 keepAliveTime;
  gboolean __isset_keepAliveTime;
  gint32 stalepathTime;
  gboolean __isset_stalepathTime;
  gboolean announceFbit;
  gboolean __isset_announceFbit;
};
typedef struct _BgpConfiguratorStartBgpArgs BgpConfiguratorStartBgpArgs;

struct _BgpConfiguratorStartBgpArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorStartBgpArgsClass BgpConfiguratorStartBgpArgsClass;

GType bgp_configurator_start_bgp_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_START_BGP_ARGS (bgp_configurator_start_bgp_args_get_type())
#define BGP_CONFIGURATOR_START_BGP_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_START_BGP_ARGS, BgpConfiguratorStartBgpArgs))
#define BGP_CONFIGURATOR_START_BGP_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_START_BGP_ARGS, BgpConfiguratorStartBgpArgsClass))
#define IS_BGP_CONFIGURATOR_START_BGP_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_START_BGP_ARGS))
#define IS_BGP_CONFIGURATOR_START_BGP_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_START_BGP_ARGS))
#define BGP_CONFIGURATOR_START_BGP_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_START_BGP_ARGS, BgpConfiguratorStartBgpArgsClass))

/* struct BgpConfiguratorStartBgpResult */
struct _BgpConfiguratorStartBgpResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorStartBgpResult BgpConfiguratorStartBgpResult;

struct _BgpConfiguratorStartBgpResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorStartBgpResultClass BgpConfiguratorStartBgpResultClass;

GType bgp_configurator_start_bgp_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_START_BGP_RESULT (bgp_configurator_start_bgp_result_get_type())
#define BGP_CONFIGURATOR_START_BGP_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_START_BGP_RESULT, BgpConfiguratorStartBgpResult))
#define BGP_CONFIGURATOR_START_BGP_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_START_BGP_RESULT, BgpConfiguratorStartBgpResultClass))
#define IS_BGP_CONFIGURATOR_START_BGP_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_START_BGP_RESULT))
#define IS_BGP_CONFIGURATOR_START_BGP_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_START_BGP_RESULT))
#define BGP_CONFIGURATOR_START_BGP_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_START_BGP_RESULT, BgpConfiguratorStartBgpResultClass))

/* struct BgpConfiguratorStopBgpArgs */
struct _BgpConfiguratorStopBgpArgs
{ 
  ThriftStruct parent; 

  /* public */
  gint32 asNumber;
  gboolean __isset_asNumber;
};
typedef struct _BgpConfiguratorStopBgpArgs BgpConfiguratorStopBgpArgs;

struct _BgpConfiguratorStopBgpArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorStopBgpArgsClass BgpConfiguratorStopBgpArgsClass;

GType bgp_configurator_stop_bgp_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_STOP_BGP_ARGS (bgp_configurator_stop_bgp_args_get_type())
#define BGP_CONFIGURATOR_STOP_BGP_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_STOP_BGP_ARGS, BgpConfiguratorStopBgpArgs))
#define BGP_CONFIGURATOR_STOP_BGP_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_STOP_BGP_ARGS, BgpConfiguratorStopBgpArgsClass))
#define IS_BGP_CONFIGURATOR_STOP_BGP_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_STOP_BGP_ARGS))
#define IS_BGP_CONFIGURATOR_STOP_BGP_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_STOP_BGP_ARGS))
#define BGP_CONFIGURATOR_STOP_BGP_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_STOP_BGP_ARGS, BgpConfiguratorStopBgpArgsClass))

/* struct BgpConfiguratorStopBgpResult */
struct _BgpConfiguratorStopBgpResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorStopBgpResult BgpConfiguratorStopBgpResult;

struct _BgpConfiguratorStopBgpResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorStopBgpResultClass BgpConfiguratorStopBgpResultClass;

GType bgp_configurator_stop_bgp_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_STOP_BGP_RESULT (bgp_configurator_stop_bgp_result_get_type())
#define BGP_CONFIGURATOR_STOP_BGP_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_STOP_BGP_RESULT, BgpConfiguratorStopBgpResult))
#define BGP_CONFIGURATOR_STOP_BGP_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_STOP_BGP_RESULT, BgpConfiguratorStopBgpResultClass))
#define IS_BGP_CONFIGURATOR_STOP_BGP_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_STOP_BGP_RESULT))
#define IS_BGP_CONFIGURATOR_STOP_BGP_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_STOP_BGP_RESULT))
#define BGP_CONFIGURATOR_STOP_BGP_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_STOP_BGP_RESULT, BgpConfiguratorStopBgpResultClass))

/* struct BgpConfiguratorCreatePeerArgs */
struct _BgpConfiguratorCreatePeerArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * ipAddress;
  gboolean __isset_ipAddress;
  gint32 asNumber;
  gboolean __isset_asNumber;
};
typedef struct _BgpConfiguratorCreatePeerArgs BgpConfiguratorCreatePeerArgs;

struct _BgpConfiguratorCreatePeerArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorCreatePeerArgsClass BgpConfiguratorCreatePeerArgsClass;

GType bgp_configurator_create_peer_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_CREATE_PEER_ARGS (bgp_configurator_create_peer_args_get_type())
#define BGP_CONFIGURATOR_CREATE_PEER_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_CREATE_PEER_ARGS, BgpConfiguratorCreatePeerArgs))
#define BGP_CONFIGURATOR_CREATE_PEER_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_CREATE_PEER_ARGS, BgpConfiguratorCreatePeerArgsClass))
#define IS_BGP_CONFIGURATOR_CREATE_PEER_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_CREATE_PEER_ARGS))
#define IS_BGP_CONFIGURATOR_CREATE_PEER_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_CREATE_PEER_ARGS))
#define BGP_CONFIGURATOR_CREATE_PEER_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_CREATE_PEER_ARGS, BgpConfiguratorCreatePeerArgsClass))

/* struct BgpConfiguratorCreatePeerResult */
struct _BgpConfiguratorCreatePeerResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorCreatePeerResult BgpConfiguratorCreatePeerResult;

struct _BgpConfiguratorCreatePeerResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorCreatePeerResultClass BgpConfiguratorCreatePeerResultClass;

GType bgp_configurator_create_peer_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_CREATE_PEER_RESULT (bgp_configurator_create_peer_result_get_type())
#define BGP_CONFIGURATOR_CREATE_PEER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_CREATE_PEER_RESULT, BgpConfiguratorCreatePeerResult))
#define BGP_CONFIGURATOR_CREATE_PEER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_CREATE_PEER_RESULT, BgpConfiguratorCreatePeerResultClass))
#define IS_BGP_CONFIGURATOR_CREATE_PEER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_CREATE_PEER_RESULT))
#define IS_BGP_CONFIGURATOR_CREATE_PEER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_CREATE_PEER_RESULT))
#define BGP_CONFIGURATOR_CREATE_PEER_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_CREATE_PEER_RESULT, BgpConfiguratorCreatePeerResultClass))

/* struct BgpConfiguratorDeletePeerArgs */
struct _BgpConfiguratorDeletePeerArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * ipAddress;
  gboolean __isset_ipAddress;
};
typedef struct _BgpConfiguratorDeletePeerArgs BgpConfiguratorDeletePeerArgs;

struct _BgpConfiguratorDeletePeerArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorDeletePeerArgsClass BgpConfiguratorDeletePeerArgsClass;

GType bgp_configurator_delete_peer_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_DELETE_PEER_ARGS (bgp_configurator_delete_peer_args_get_type())
#define BGP_CONFIGURATOR_DELETE_PEER_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_DELETE_PEER_ARGS, BgpConfiguratorDeletePeerArgs))
#define BGP_CONFIGURATOR_DELETE_PEER_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_DELETE_PEER_ARGS, BgpConfiguratorDeletePeerArgsClass))
#define IS_BGP_CONFIGURATOR_DELETE_PEER_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_DELETE_PEER_ARGS))
#define IS_BGP_CONFIGURATOR_DELETE_PEER_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_DELETE_PEER_ARGS))
#define BGP_CONFIGURATOR_DELETE_PEER_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_DELETE_PEER_ARGS, BgpConfiguratorDeletePeerArgsClass))

/* struct BgpConfiguratorDeletePeerResult */
struct _BgpConfiguratorDeletePeerResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorDeletePeerResult BgpConfiguratorDeletePeerResult;

struct _BgpConfiguratorDeletePeerResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorDeletePeerResultClass BgpConfiguratorDeletePeerResultClass;

GType bgp_configurator_delete_peer_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_DELETE_PEER_RESULT (bgp_configurator_delete_peer_result_get_type())
#define BGP_CONFIGURATOR_DELETE_PEER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_DELETE_PEER_RESULT, BgpConfiguratorDeletePeerResult))
#define BGP_CONFIGURATOR_DELETE_PEER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_DELETE_PEER_RESULT, BgpConfiguratorDeletePeerResultClass))
#define IS_BGP_CONFIGURATOR_DELETE_PEER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_DELETE_PEER_RESULT))
#define IS_BGP_CONFIGURATOR_DELETE_PEER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_DELETE_PEER_RESULT))
#define BGP_CONFIGURATOR_DELETE_PEER_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_DELETE_PEER_RESULT, BgpConfiguratorDeletePeerResultClass))

/* struct BgpConfiguratorAddVrfArgs */
struct _BgpConfiguratorAddVrfArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * rd;
  gboolean __isset_rd;
  GPtrArray * irts;
  gboolean __isset_irts;
  GPtrArray * erts;
  gboolean __isset_erts;
};
typedef struct _BgpConfiguratorAddVrfArgs BgpConfiguratorAddVrfArgs;

struct _BgpConfiguratorAddVrfArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorAddVrfArgsClass BgpConfiguratorAddVrfArgsClass;

GType bgp_configurator_add_vrf_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_ADD_VRF_ARGS (bgp_configurator_add_vrf_args_get_type())
#define BGP_CONFIGURATOR_ADD_VRF_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_ADD_VRF_ARGS, BgpConfiguratorAddVrfArgs))
#define BGP_CONFIGURATOR_ADD_VRF_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_ADD_VRF_ARGS, BgpConfiguratorAddVrfArgsClass))
#define IS_BGP_CONFIGURATOR_ADD_VRF_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_ADD_VRF_ARGS))
#define IS_BGP_CONFIGURATOR_ADD_VRF_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_ADD_VRF_ARGS))
#define BGP_CONFIGURATOR_ADD_VRF_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_ADD_VRF_ARGS, BgpConfiguratorAddVrfArgsClass))

/* struct BgpConfiguratorAddVrfResult */
struct _BgpConfiguratorAddVrfResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorAddVrfResult BgpConfiguratorAddVrfResult;

struct _BgpConfiguratorAddVrfResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorAddVrfResultClass BgpConfiguratorAddVrfResultClass;

GType bgp_configurator_add_vrf_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_ADD_VRF_RESULT (bgp_configurator_add_vrf_result_get_type())
#define BGP_CONFIGURATOR_ADD_VRF_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_ADD_VRF_RESULT, BgpConfiguratorAddVrfResult))
#define BGP_CONFIGURATOR_ADD_VRF_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_ADD_VRF_RESULT, BgpConfiguratorAddVrfResultClass))
#define IS_BGP_CONFIGURATOR_ADD_VRF_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_ADD_VRF_RESULT))
#define IS_BGP_CONFIGURATOR_ADD_VRF_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_ADD_VRF_RESULT))
#define BGP_CONFIGURATOR_ADD_VRF_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_ADD_VRF_RESULT, BgpConfiguratorAddVrfResultClass))

/* struct BgpConfiguratorDelVrfArgs */
struct _BgpConfiguratorDelVrfArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * rd;
  gboolean __isset_rd;
};
typedef struct _BgpConfiguratorDelVrfArgs BgpConfiguratorDelVrfArgs;

struct _BgpConfiguratorDelVrfArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorDelVrfArgsClass BgpConfiguratorDelVrfArgsClass;

GType bgp_configurator_del_vrf_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_DEL_VRF_ARGS (bgp_configurator_del_vrf_args_get_type())
#define BGP_CONFIGURATOR_DEL_VRF_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_DEL_VRF_ARGS, BgpConfiguratorDelVrfArgs))
#define BGP_CONFIGURATOR_DEL_VRF_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_DEL_VRF_ARGS, BgpConfiguratorDelVrfArgsClass))
#define IS_BGP_CONFIGURATOR_DEL_VRF_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_DEL_VRF_ARGS))
#define IS_BGP_CONFIGURATOR_DEL_VRF_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_DEL_VRF_ARGS))
#define BGP_CONFIGURATOR_DEL_VRF_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_DEL_VRF_ARGS, BgpConfiguratorDelVrfArgsClass))

/* struct BgpConfiguratorDelVrfResult */
struct _BgpConfiguratorDelVrfResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorDelVrfResult BgpConfiguratorDelVrfResult;

struct _BgpConfiguratorDelVrfResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorDelVrfResultClass BgpConfiguratorDelVrfResultClass;

GType bgp_configurator_del_vrf_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_DEL_VRF_RESULT (bgp_configurator_del_vrf_result_get_type())
#define BGP_CONFIGURATOR_DEL_VRF_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_DEL_VRF_RESULT, BgpConfiguratorDelVrfResult))
#define BGP_CONFIGURATOR_DEL_VRF_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_DEL_VRF_RESULT, BgpConfiguratorDelVrfResultClass))
#define IS_BGP_CONFIGURATOR_DEL_VRF_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_DEL_VRF_RESULT))
#define IS_BGP_CONFIGURATOR_DEL_VRF_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_DEL_VRF_RESULT))
#define BGP_CONFIGURATOR_DEL_VRF_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_DEL_VRF_RESULT, BgpConfiguratorDelVrfResultClass))

/* struct BgpConfiguratorPushRouteArgs */
struct _BgpConfiguratorPushRouteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * prefix;
  gboolean __isset_prefix;
  gchar * nexthop;
  gboolean __isset_nexthop;
  gchar * rd;
  gboolean __isset_rd;
  gint32 label;
  gboolean __isset_label;
};
typedef struct _BgpConfiguratorPushRouteArgs BgpConfiguratorPushRouteArgs;

struct _BgpConfiguratorPushRouteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorPushRouteArgsClass BgpConfiguratorPushRouteArgsClass;

GType bgp_configurator_push_route_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_ARGS (bgp_configurator_push_route_args_get_type())
#define BGP_CONFIGURATOR_PUSH_ROUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_ARGS, BgpConfiguratorPushRouteArgs))
#define BGP_CONFIGURATOR_PUSH_ROUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_ARGS, BgpConfiguratorPushRouteArgsClass))
#define IS_BGP_CONFIGURATOR_PUSH_ROUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_ARGS))
#define IS_BGP_CONFIGURATOR_PUSH_ROUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_ARGS))
#define BGP_CONFIGURATOR_PUSH_ROUTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_ARGS, BgpConfiguratorPushRouteArgsClass))

/* struct BgpConfiguratorPushRouteResult */
struct _BgpConfiguratorPushRouteResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorPushRouteResult BgpConfiguratorPushRouteResult;

struct _BgpConfiguratorPushRouteResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorPushRouteResultClass BgpConfiguratorPushRouteResultClass;

GType bgp_configurator_push_route_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_RESULT (bgp_configurator_push_route_result_get_type())
#define BGP_CONFIGURATOR_PUSH_ROUTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_RESULT, BgpConfiguratorPushRouteResult))
#define BGP_CONFIGURATOR_PUSH_ROUTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_RESULT, BgpConfiguratorPushRouteResultClass))
#define IS_BGP_CONFIGURATOR_PUSH_ROUTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_RESULT))
#define IS_BGP_CONFIGURATOR_PUSH_ROUTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_RESULT))
#define BGP_CONFIGURATOR_PUSH_ROUTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_PUSH_ROUTE_RESULT, BgpConfiguratorPushRouteResultClass))

/* struct BgpConfiguratorWithdrawRouteArgs */
struct _BgpConfiguratorWithdrawRouteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * prefix;
  gboolean __isset_prefix;
  gchar * rd;
  gboolean __isset_rd;
};
typedef struct _BgpConfiguratorWithdrawRouteArgs BgpConfiguratorWithdrawRouteArgs;

struct _BgpConfiguratorWithdrawRouteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorWithdrawRouteArgsClass BgpConfiguratorWithdrawRouteArgsClass;

GType bgp_configurator_withdraw_route_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS (bgp_configurator_withdraw_route_args_get_type())
#define BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS, BgpConfiguratorWithdrawRouteArgs))
#define BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS, BgpConfiguratorWithdrawRouteArgsClass))
#define IS_BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS))
#define IS_BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS))
#define BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_ARGS, BgpConfiguratorWithdrawRouteArgsClass))

/* struct BgpConfiguratorWithdrawRouteResult */
struct _BgpConfiguratorWithdrawRouteResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorWithdrawRouteResult BgpConfiguratorWithdrawRouteResult;

struct _BgpConfiguratorWithdrawRouteResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorWithdrawRouteResultClass BgpConfiguratorWithdrawRouteResultClass;

GType bgp_configurator_withdraw_route_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT (bgp_configurator_withdraw_route_result_get_type())
#define BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT, BgpConfiguratorWithdrawRouteResult))
#define BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT, BgpConfiguratorWithdrawRouteResultClass))
#define IS_BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT))
#define IS_BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT))
#define BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_WITHDRAW_ROUTE_RESULT, BgpConfiguratorWithdrawRouteResultClass))

/* struct BgpConfiguratorSetEbgpMultihopArgs */
struct _BgpConfiguratorSetEbgpMultihopArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * peerIp;
  gboolean __isset_peerIp;
  gint32 nHops;
  gboolean __isset_nHops;
};
typedef struct _BgpConfiguratorSetEbgpMultihopArgs BgpConfiguratorSetEbgpMultihopArgs;

struct _BgpConfiguratorSetEbgpMultihopArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorSetEbgpMultihopArgsClass BgpConfiguratorSetEbgpMultihopArgsClass;

GType bgp_configurator_set_ebgp_multihop_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS (bgp_configurator_set_ebgp_multihop_args_get_type())
#define BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS, BgpConfiguratorSetEbgpMultihopArgs))
#define BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS, BgpConfiguratorSetEbgpMultihopArgsClass))
#define IS_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS))
#define IS_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS))
#define BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_ARGS, BgpConfiguratorSetEbgpMultihopArgsClass))

/* struct BgpConfiguratorSetEbgpMultihopResult */
struct _BgpConfiguratorSetEbgpMultihopResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorSetEbgpMultihopResult BgpConfiguratorSetEbgpMultihopResult;

struct _BgpConfiguratorSetEbgpMultihopResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorSetEbgpMultihopResultClass BgpConfiguratorSetEbgpMultihopResultClass;

GType bgp_configurator_set_ebgp_multihop_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT (bgp_configurator_set_ebgp_multihop_result_get_type())
#define BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT, BgpConfiguratorSetEbgpMultihopResult))
#define BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT, BgpConfiguratorSetEbgpMultihopResultClass))
#define IS_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT))
#define IS_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT))
#define BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_SET_EBGP_MULTIHOP_RESULT, BgpConfiguratorSetEbgpMultihopResultClass))

/* struct BgpConfiguratorUnsetEbgpMultihopArgs */
struct _BgpConfiguratorUnsetEbgpMultihopArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * peerIp;
  gboolean __isset_peerIp;
};
typedef struct _BgpConfiguratorUnsetEbgpMultihopArgs BgpConfiguratorUnsetEbgpMultihopArgs;

struct _BgpConfiguratorUnsetEbgpMultihopArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorUnsetEbgpMultihopArgsClass BgpConfiguratorUnsetEbgpMultihopArgsClass;

GType bgp_configurator_unset_ebgp_multihop_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS (bgp_configurator_unset_ebgp_multihop_args_get_type())
#define BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS, BgpConfiguratorUnsetEbgpMultihopArgs))
#define BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS, BgpConfiguratorUnsetEbgpMultihopArgsClass))
#define IS_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS))
#define IS_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS))
#define BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_ARGS, BgpConfiguratorUnsetEbgpMultihopArgsClass))

/* struct BgpConfiguratorUnsetEbgpMultihopResult */
struct _BgpConfiguratorUnsetEbgpMultihopResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorUnsetEbgpMultihopResult BgpConfiguratorUnsetEbgpMultihopResult;

struct _BgpConfiguratorUnsetEbgpMultihopResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorUnsetEbgpMultihopResultClass BgpConfiguratorUnsetEbgpMultihopResultClass;

GType bgp_configurator_unset_ebgp_multihop_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT (bgp_configurator_unset_ebgp_multihop_result_get_type())
#define BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT, BgpConfiguratorUnsetEbgpMultihopResult))
#define BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT, BgpConfiguratorUnsetEbgpMultihopResultClass))
#define IS_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT))
#define IS_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT))
#define BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_UNSET_EBGP_MULTIHOP_RESULT, BgpConfiguratorUnsetEbgpMultihopResultClass))

/* struct BgpConfiguratorSetUpdateSourceArgs */
struct _BgpConfiguratorSetUpdateSourceArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * peerIp;
  gboolean __isset_peerIp;
  gchar * srcIp;
  gboolean __isset_srcIp;
};
typedef struct _BgpConfiguratorSetUpdateSourceArgs BgpConfiguratorSetUpdateSourceArgs;

struct _BgpConfiguratorSetUpdateSourceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorSetUpdateSourceArgsClass BgpConfiguratorSetUpdateSourceArgsClass;

GType bgp_configurator_set_update_source_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS (bgp_configurator_set_update_source_args_get_type())
#define BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS, BgpConfiguratorSetUpdateSourceArgs))
#define BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS, BgpConfiguratorSetUpdateSourceArgsClass))
#define IS_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS))
#define IS_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS))
#define BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_ARGS, BgpConfiguratorSetUpdateSourceArgsClass))

/* struct BgpConfiguratorSetUpdateSourceResult */
struct _BgpConfiguratorSetUpdateSourceResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorSetUpdateSourceResult BgpConfiguratorSetUpdateSourceResult;

struct _BgpConfiguratorSetUpdateSourceResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorSetUpdateSourceResultClass BgpConfiguratorSetUpdateSourceResultClass;

GType bgp_configurator_set_update_source_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT (bgp_configurator_set_update_source_result_get_type())
#define BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT, BgpConfiguratorSetUpdateSourceResult))
#define BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT, BgpConfiguratorSetUpdateSourceResultClass))
#define IS_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT))
#define IS_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT))
#define BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_SET_UPDATE_SOURCE_RESULT, BgpConfiguratorSetUpdateSourceResultClass))

/* struct BgpConfiguratorUnsetUpdateSourceArgs */
struct _BgpConfiguratorUnsetUpdateSourceArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * peerIp;
  gboolean __isset_peerIp;
};
typedef struct _BgpConfiguratorUnsetUpdateSourceArgs BgpConfiguratorUnsetUpdateSourceArgs;

struct _BgpConfiguratorUnsetUpdateSourceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorUnsetUpdateSourceArgsClass BgpConfiguratorUnsetUpdateSourceArgsClass;

GType bgp_configurator_unset_update_source_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS (bgp_configurator_unset_update_source_args_get_type())
#define BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS, BgpConfiguratorUnsetUpdateSourceArgs))
#define BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS, BgpConfiguratorUnsetUpdateSourceArgsClass))
#define IS_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS))
#define IS_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS))
#define BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_ARGS, BgpConfiguratorUnsetUpdateSourceArgsClass))

/* struct BgpConfiguratorUnsetUpdateSourceResult */
struct _BgpConfiguratorUnsetUpdateSourceResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorUnsetUpdateSourceResult BgpConfiguratorUnsetUpdateSourceResult;

struct _BgpConfiguratorUnsetUpdateSourceResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorUnsetUpdateSourceResultClass BgpConfiguratorUnsetUpdateSourceResultClass;

GType bgp_configurator_unset_update_source_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT (bgp_configurator_unset_update_source_result_get_type())
#define BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT, BgpConfiguratorUnsetUpdateSourceResult))
#define BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT, BgpConfiguratorUnsetUpdateSourceResultClass))
#define IS_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT))
#define IS_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT))
#define BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_UNSET_UPDATE_SOURCE_RESULT, BgpConfiguratorUnsetUpdateSourceResultClass))

/* struct BgpConfiguratorEnableAddressFamilyArgs */
struct _BgpConfiguratorEnableAddressFamilyArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * peerIp;
  gboolean __isset_peerIp;
  af_afi afi;
  gboolean __isset_afi;
  af_safi safi;
  gboolean __isset_safi;
};
typedef struct _BgpConfiguratorEnableAddressFamilyArgs BgpConfiguratorEnableAddressFamilyArgs;

struct _BgpConfiguratorEnableAddressFamilyArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorEnableAddressFamilyArgsClass BgpConfiguratorEnableAddressFamilyArgsClass;

GType bgp_configurator_enable_address_family_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS (bgp_configurator_enable_address_family_args_get_type())
#define BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS, BgpConfiguratorEnableAddressFamilyArgs))
#define BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS, BgpConfiguratorEnableAddressFamilyArgsClass))
#define IS_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS))
#define IS_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS))
#define BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_ARGS, BgpConfiguratorEnableAddressFamilyArgsClass))

/* struct BgpConfiguratorEnableAddressFamilyResult */
struct _BgpConfiguratorEnableAddressFamilyResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorEnableAddressFamilyResult BgpConfiguratorEnableAddressFamilyResult;

struct _BgpConfiguratorEnableAddressFamilyResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorEnableAddressFamilyResultClass BgpConfiguratorEnableAddressFamilyResultClass;

GType bgp_configurator_enable_address_family_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT (bgp_configurator_enable_address_family_result_get_type())
#define BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT, BgpConfiguratorEnableAddressFamilyResult))
#define BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT, BgpConfiguratorEnableAddressFamilyResultClass))
#define IS_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT))
#define IS_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT))
#define BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_ADDRESS_FAMILY_RESULT, BgpConfiguratorEnableAddressFamilyResultClass))

/* struct BgpConfiguratorDisableAddressFamilyArgs */
struct _BgpConfiguratorDisableAddressFamilyArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * peerIp;
  gboolean __isset_peerIp;
  af_afi afi;
  gboolean __isset_afi;
  af_safi safi;
  gboolean __isset_safi;
};
typedef struct _BgpConfiguratorDisableAddressFamilyArgs BgpConfiguratorDisableAddressFamilyArgs;

struct _BgpConfiguratorDisableAddressFamilyArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorDisableAddressFamilyArgsClass BgpConfiguratorDisableAddressFamilyArgsClass;

GType bgp_configurator_disable_address_family_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS (bgp_configurator_disable_address_family_args_get_type())
#define BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS, BgpConfiguratorDisableAddressFamilyArgs))
#define BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS, BgpConfiguratorDisableAddressFamilyArgsClass))
#define IS_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS))
#define IS_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS))
#define BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_ARGS, BgpConfiguratorDisableAddressFamilyArgsClass))

/* struct BgpConfiguratorDisableAddressFamilyResult */
struct _BgpConfiguratorDisableAddressFamilyResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorDisableAddressFamilyResult BgpConfiguratorDisableAddressFamilyResult;

struct _BgpConfiguratorDisableAddressFamilyResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorDisableAddressFamilyResultClass BgpConfiguratorDisableAddressFamilyResultClass;

GType bgp_configurator_disable_address_family_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT (bgp_configurator_disable_address_family_result_get_type())
#define BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT, BgpConfiguratorDisableAddressFamilyResult))
#define BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT, BgpConfiguratorDisableAddressFamilyResultClass))
#define IS_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT))
#define IS_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT))
#define BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_ADDRESS_FAMILY_RESULT, BgpConfiguratorDisableAddressFamilyResultClass))

/* struct BgpConfiguratorSetLogConfigArgs */
struct _BgpConfiguratorSetLogConfigArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * logFileName;
  gboolean __isset_logFileName;
  gchar * logLevel;
  gboolean __isset_logLevel;
};
typedef struct _BgpConfiguratorSetLogConfigArgs BgpConfiguratorSetLogConfigArgs;

struct _BgpConfiguratorSetLogConfigArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorSetLogConfigArgsClass BgpConfiguratorSetLogConfigArgsClass;

GType bgp_configurator_set_log_config_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS (bgp_configurator_set_log_config_args_get_type())
#define BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS, BgpConfiguratorSetLogConfigArgs))
#define BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS, BgpConfiguratorSetLogConfigArgsClass))
#define IS_BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS))
#define IS_BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS))
#define BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_ARGS, BgpConfiguratorSetLogConfigArgsClass))

/* struct BgpConfiguratorSetLogConfigResult */
struct _BgpConfiguratorSetLogConfigResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorSetLogConfigResult BgpConfiguratorSetLogConfigResult;

struct _BgpConfiguratorSetLogConfigResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorSetLogConfigResultClass BgpConfiguratorSetLogConfigResultClass;

GType bgp_configurator_set_log_config_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT (bgp_configurator_set_log_config_result_get_type())
#define BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT, BgpConfiguratorSetLogConfigResult))
#define BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT, BgpConfiguratorSetLogConfigResultClass))
#define IS_BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT))
#define IS_BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT))
#define BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_SET_LOG_CONFIG_RESULT, BgpConfiguratorSetLogConfigResultClass))

/* struct BgpConfiguratorEnableGracefulRestartArgs */
struct _BgpConfiguratorEnableGracefulRestartArgs
{ 
  ThriftStruct parent; 

  /* public */
  gint32 stalepathTime;
  gboolean __isset_stalepathTime;
};
typedef struct _BgpConfiguratorEnableGracefulRestartArgs BgpConfiguratorEnableGracefulRestartArgs;

struct _BgpConfiguratorEnableGracefulRestartArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorEnableGracefulRestartArgsClass BgpConfiguratorEnableGracefulRestartArgsClass;

GType bgp_configurator_enable_graceful_restart_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS (bgp_configurator_enable_graceful_restart_args_get_type())
#define BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS, BgpConfiguratorEnableGracefulRestartArgs))
#define BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS, BgpConfiguratorEnableGracefulRestartArgsClass))
#define IS_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS))
#define IS_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS))
#define BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_ARGS, BgpConfiguratorEnableGracefulRestartArgsClass))

/* struct BgpConfiguratorEnableGracefulRestartResult */
struct _BgpConfiguratorEnableGracefulRestartResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorEnableGracefulRestartResult BgpConfiguratorEnableGracefulRestartResult;

struct _BgpConfiguratorEnableGracefulRestartResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorEnableGracefulRestartResultClass BgpConfiguratorEnableGracefulRestartResultClass;

GType bgp_configurator_enable_graceful_restart_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT (bgp_configurator_enable_graceful_restart_result_get_type())
#define BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT, BgpConfiguratorEnableGracefulRestartResult))
#define BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT, BgpConfiguratorEnableGracefulRestartResultClass))
#define IS_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT))
#define IS_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT))
#define BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_ENABLE_GRACEFUL_RESTART_RESULT, BgpConfiguratorEnableGracefulRestartResultClass))

/* struct BgpConfiguratorDisableGracefulRestartArgs */
struct _BgpConfiguratorDisableGracefulRestartArgs
{ 
  ThriftStruct parent; 

  /* public */
};
typedef struct _BgpConfiguratorDisableGracefulRestartArgs BgpConfiguratorDisableGracefulRestartArgs;

struct _BgpConfiguratorDisableGracefulRestartArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorDisableGracefulRestartArgsClass BgpConfiguratorDisableGracefulRestartArgsClass;

GType bgp_configurator_disable_graceful_restart_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS (bgp_configurator_disable_graceful_restart_args_get_type())
#define BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS, BgpConfiguratorDisableGracefulRestartArgs))
#define BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS, BgpConfiguratorDisableGracefulRestartArgsClass))
#define IS_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS))
#define IS_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS))
#define BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_ARGS, BgpConfiguratorDisableGracefulRestartArgsClass))

/* struct BgpConfiguratorDisableGracefulRestartResult */
struct _BgpConfiguratorDisableGracefulRestartResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorDisableGracefulRestartResult BgpConfiguratorDisableGracefulRestartResult;

struct _BgpConfiguratorDisableGracefulRestartResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorDisableGracefulRestartResultClass BgpConfiguratorDisableGracefulRestartResultClass;

GType bgp_configurator_disable_graceful_restart_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT (bgp_configurator_disable_graceful_restart_result_get_type())
#define BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT, BgpConfiguratorDisableGracefulRestartResult))
#define BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT, BgpConfiguratorDisableGracefulRestartResultClass))
#define IS_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT))
#define IS_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT))
#define BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_DISABLE_GRACEFUL_RESTART_RESULT, BgpConfiguratorDisableGracefulRestartResultClass))

/* struct BgpConfiguratorGetRoutesArgs */
struct _BgpConfiguratorGetRoutesArgs
{ 
  ThriftStruct parent; 

  /* public */
  gint32 optype;
  gboolean __isset_optype;
  gint32 winSize;
  gboolean __isset_winSize;
};
typedef struct _BgpConfiguratorGetRoutesArgs BgpConfiguratorGetRoutesArgs;

struct _BgpConfiguratorGetRoutesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorGetRoutesArgsClass BgpConfiguratorGetRoutesArgsClass;

GType bgp_configurator_get_routes_args_get_type (void);
#define TYPE_BGP_CONFIGURATOR_GET_ROUTES_ARGS (bgp_configurator_get_routes_args_get_type())
#define BGP_CONFIGURATOR_GET_ROUTES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_GET_ROUTES_ARGS, BgpConfiguratorGetRoutesArgs))
#define BGP_CONFIGURATOR_GET_ROUTES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_GET_ROUTES_ARGS, BgpConfiguratorGetRoutesArgsClass))
#define IS_BGP_CONFIGURATOR_GET_ROUTES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_GET_ROUTES_ARGS))
#define IS_BGP_CONFIGURATOR_GET_ROUTES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_GET_ROUTES_ARGS))
#define BGP_CONFIGURATOR_GET_ROUTES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_GET_ROUTES_ARGS, BgpConfiguratorGetRoutesArgsClass))

/* struct BgpConfiguratorGetRoutesResult */
struct _BgpConfiguratorGetRoutesResult
{ 
  ThriftStruct parent; 

  /* public */
  Routes * success;
  gboolean __isset_success;
};
typedef struct _BgpConfiguratorGetRoutesResult BgpConfiguratorGetRoutesResult;

struct _BgpConfiguratorGetRoutesResultClass
{
  ThriftStructClass parent;
};
typedef struct _BgpConfiguratorGetRoutesResultClass BgpConfiguratorGetRoutesResultClass;

GType bgp_configurator_get_routes_result_get_type (void);
#define TYPE_BGP_CONFIGURATOR_GET_ROUTES_RESULT (bgp_configurator_get_routes_result_get_type())
#define BGP_CONFIGURATOR_GET_ROUTES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_CONFIGURATOR_GET_ROUTES_RESULT, BgpConfiguratorGetRoutesResult))
#define BGP_CONFIGURATOR_GET_ROUTES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_CONFIGURATOR_GET_ROUTES_RESULT, BgpConfiguratorGetRoutesResultClass))
#define IS_BGP_CONFIGURATOR_GET_ROUTES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_CONFIGURATOR_GET_ROUTES_RESULT))
#define IS_BGP_CONFIGURATOR_GET_ROUTES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_CONFIGURATOR_GET_ROUTES_RESULT))
#define BGP_CONFIGURATOR_GET_ROUTES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_CONFIGURATOR_GET_ROUTES_RESULT, BgpConfiguratorGetRoutesResultClass))

/* struct BgpUpdaterOnUpdatePushRouteArgs */
struct _BgpUpdaterOnUpdatePushRouteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * rd;
  gboolean __isset_rd;
  gchar * prefix;
  gboolean __isset_prefix;
  gint32 prefixlen;
  gboolean __isset_prefixlen;
  gchar * nexthop;
  gboolean __isset_nexthop;
  gint32 label;
  gboolean __isset_label;
};
typedef struct _BgpUpdaterOnUpdatePushRouteArgs BgpUpdaterOnUpdatePushRouteArgs;

struct _BgpUpdaterOnUpdatePushRouteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpUpdaterOnUpdatePushRouteArgsClass BgpUpdaterOnUpdatePushRouteArgsClass;

GType bgp_updater_on_update_push_route_args_get_type (void);
#define TYPE_BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS (bgp_updater_on_update_push_route_args_get_type())
#define BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS, BgpUpdaterOnUpdatePushRouteArgs))
#define BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS, BgpUpdaterOnUpdatePushRouteArgsClass))
#define IS_BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS))
#define IS_BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS))
#define BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_UPDATER_ON_UPDATE_PUSH_ROUTE_ARGS, BgpUpdaterOnUpdatePushRouteArgsClass))

/* struct BgpUpdaterOnUpdateWithdrawRouteArgs */
struct _BgpUpdaterOnUpdateWithdrawRouteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * rd;
  gboolean __isset_rd;
  gchar * prefix;
  gboolean __isset_prefix;
  gint32 prefixlen;
  gboolean __isset_prefixlen;
};
typedef struct _BgpUpdaterOnUpdateWithdrawRouteArgs BgpUpdaterOnUpdateWithdrawRouteArgs;

struct _BgpUpdaterOnUpdateWithdrawRouteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpUpdaterOnUpdateWithdrawRouteArgsClass BgpUpdaterOnUpdateWithdrawRouteArgsClass;

GType bgp_updater_on_update_withdraw_route_args_get_type (void);
#define TYPE_BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS (bgp_updater_on_update_withdraw_route_args_get_type())
#define BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS, BgpUpdaterOnUpdateWithdrawRouteArgs))
#define BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS, BgpUpdaterOnUpdateWithdrawRouteArgsClass))
#define IS_BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS))
#define IS_BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS))
#define BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_UPDATER_ON_UPDATE_WITHDRAW_ROUTE_ARGS, BgpUpdaterOnUpdateWithdrawRouteArgsClass))

/* struct BgpUpdaterOnStartConfigResyncNotificationArgs */
struct _BgpUpdaterOnStartConfigResyncNotificationArgs
{ 
  ThriftStruct parent; 

  /* public */
};
typedef struct _BgpUpdaterOnStartConfigResyncNotificationArgs BgpUpdaterOnStartConfigResyncNotificationArgs;

struct _BgpUpdaterOnStartConfigResyncNotificationArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpUpdaterOnStartConfigResyncNotificationArgsClass BgpUpdaterOnStartConfigResyncNotificationArgsClass;

GType bgp_updater_on_start_config_resync_notification_args_get_type (void);
#define TYPE_BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS (bgp_updater_on_start_config_resync_notification_args_get_type())
#define BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS, BgpUpdaterOnStartConfigResyncNotificationArgs))
#define BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS, BgpUpdaterOnStartConfigResyncNotificationArgsClass))
#define IS_BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS))
#define IS_BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS))
#define BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_UPDATER_ON_START_CONFIG_RESYNC_NOTIFICATION_ARGS, BgpUpdaterOnStartConfigResyncNotificationArgsClass))

/* struct BgpUpdaterOnNotificationSendEventArgs */
struct _BgpUpdaterOnNotificationSendEventArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * prefix;
  gboolean __isset_prefix;
  gint8 errCode;
  gboolean __isset_errCode;
  gint8 errSubcode;
  gboolean __isset_errSubcode;
};
typedef struct _BgpUpdaterOnNotificationSendEventArgs BgpUpdaterOnNotificationSendEventArgs;

struct _BgpUpdaterOnNotificationSendEventArgsClass
{
  ThriftStructClass parent;
};
typedef struct _BgpUpdaterOnNotificationSendEventArgsClass BgpUpdaterOnNotificationSendEventArgsClass;

GType bgp_updater_on_notification_send_event_args_get_type (void);
#define TYPE_BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS (bgp_updater_on_notification_send_event_args_get_type())
#define BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS, BgpUpdaterOnNotificationSendEventArgs))
#define BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS, BgpUpdaterOnNotificationSendEventArgsClass))
#define IS_BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS))
#define IS_BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS))
#define BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_BGP_UPDATER_ON_NOTIFICATION_SEND_EVENT_ARGS, BgpUpdaterOnNotificationSendEventArgsClass))

#endif /* VPNSERVICE_TYPES_H */
