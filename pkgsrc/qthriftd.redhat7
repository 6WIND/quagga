#! /bin/sh

### BEGIN INIT INFO
# Provides:		qthriftd
# Required-Start:	$remote_fs
# Required-Stop:	$remote_fs
# Default-Start:	2 3 4 5
# Default-Stop:
# Description:	Zebra RPC Daemon for QUAGGA Framework
### END INIT INFO

set -e

# /opt/quagga/etc/init.d/qthriftd: start and stop the quagga-thrift daemon

PREFIX=/opt/quagga

BIN=$PREFIX/sbin/qthriftd
test -x $BIN || exit 0
BASENAME=$(basename $BIN)

PIDFILE=${PREFIX}/var/run/quagga/${BASENAME}.init.pid
LOGFILE=${PREFIX}/var/log/quagga/${BASENAME}.init.log

#Time to sleep before each logfile check for rotate
TIME_SLEEP=120
#If log file size than 10M, we will run logrotate 
LOG_SIZE=1

umask 022

. /lib/lsb/init-functions

check_privsep_dir() {
	# Create the PrivSep empty dir if necessary
	if [ ! -d $PREFIX/var/run/quagga ]; then
		mkdir $PREFIX/var/run/quagga/
		chmod 0755 $PREFIX/var/run/quagga/
		chown -R quagga:quagga $PREFIX/var/run/quagga/
	fi
	if [ ! -d $PREFIX/var/log/quagga ]; then
		mkdir $PREFIX/var/log/quagga/
		chmod 0755 $PREFIX/var/log/quagga/
		chown -R quagga:quagga $PREFIX/var/log/quagga/
	fi
}

log_rotate () {
	local tarname

	# If logfile is greater than 100Mo
	if [ -r $LOGFILE ] && [ "$(stat --printf='%s' $LOGFILE)" -gt "$((100*1024*1024))" ]; then
		tarname=$tarname"${LOGFILE}."
		tarname=$tarname"$(stat -c %y $LOGFILE|sed 's/\([ :]\)/-/g' | sed 's:\..*::' | sed 's:-::g')"
		tarname=$tarname".tgz"
		tar cPzf $tarname $LOGFILE
		rm -f $LOGFILE
	fi
}

kill_all_log_rotate() {
	#Kill loop script for logrotate
	SCRIPT_TO_KILL=`pgrep -f qthriftd_log_rotate.sh`
	if [ -n "${SCRIPT_TO_KILL}" ]
	then
		for log_pid in ${SCRIPT_TO_KILL}
		do
			kill -9 ${log_pid}
		done
	fi
}

start () {
        local rc;
        local ret;
        local nb;
        log_rotate
        nb=$(ps -ax 2>/dev/null | grep $BASENAME | grep -v grep | grep -v init | grep -v '\[' | wc -l)
        if [ "$nb" -ge "1" ]; then
            echo "An existing instance of $BASENAME is present. Do nothing."
            return 1
        fi
	# Clean Up: kill all log rotate script
	kill_all_log_rotate
        touch $LOGFILE
        chown quagga:quagga $LOGFILE
        chmod u=rwx,go=rwx $LOGFILE
        $BIN -D 2>/dev/null >/dev/null &
        ret=$!
        sleep 1
        if [ ! -z "$ret" ]; then
                nb=$(ps -ax | grep $ret | grep qthriftd | wc -l)
                if [ "$nb" -eq "1" ]; then
                    echo $ret > $PIDFILE
		    bash $PREFIX/etc/init.d/qthriftd_log_rotate.sh ${TIME_SLEEP} ${LOG_SIZE} &
                    rc=0
                else
                    rc=1
                fi
        else
                rc=1
        fi
        return $rc
}



stop () {
	#Kill loop script for logrotate
	kill_all_log_rotate

	killproc -p $PIDFILE -TERM $BIN
}

case "$1" in
start)
	check_privsep_dir
	if start; then
		log_success_msg "Starting Quagga-Thrift server $BASENAME" || true
	else
		log_failure_msg "Starting Quagga-Thrift server $BASENAME" || true
	fi
	;;
stop)
	if stop --retry=TERM/5; then
		log_success_msg "Shutting down Quagga-Thrift server $BASENAME" || true
	else
		log_failure_msg "Shutting down Quagga-Thrift server $BASENAME" || true
	fi
	;;

force-stop)
	log_daemon_msg "Stopping Quagga-Thrift server" "$BASENAME" || true
	if stop --retry=KILL/1; then
		log_success_msg || true
	else
		log_failure_msg || true
	fi
	;;

restart)
	check_privsep_dir
	log_daemon_msg "Restarting Quagga-Thrift server" "$BASENAME" || true
	stop --retry=TERM/5/KILL/5
	if start; then
		log_success_msg || true
	else
		log_failure_msg || true
	fi
	;;

*)
	log_action_msg "Usage: $0 {start|stop|force-stop|restart}" || true
	exit 1
esac

exit 0
